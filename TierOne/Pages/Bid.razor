@page "/Bid/{Id:int}"
@using TierOne.Data
@using TierOne.Data.Interfaces
@inject IProductManager ProductManager
@inject IBidManager BidManager
@inject AuthenticationStateProvider AuthenticationStateProvider

@if (Product == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <div class="form-group"> Id:<br/> @Product.Id </div>
    <div class="form-group"> Name:<br/> @Product.Name </div>
    <div class="form-group"> Date:<br/> @Product.Date </div>
    <div class="form-group"> Description:<br/> @Product.Description </div>
    

                                                       
  /*  <div class="form-group"> Categories:
        @foreach (var category in Product.Categories)
        {
            @category <text>, </text>

        }
    </div>
    
    <div class="form-group"> Tags:
        @foreach (var tag in Product.Tags)
        {
            @tag <text>, </text>
        }
    </div>
    
    
    
                                                  
                 */               
    <img src="@Product.PhotoUrl" asp-append-version="true" width="300px"/> 
    <div class="form-group"> Name: <br/> @UserWinning </div>  
    <div class="form-group"> Price: <br/> @Product.Price </div>
    <div class="form-group"> New Bid: <br/> </div>
    <button @onclick="@(BidButtonCliked)">
        <i class="oi oi-trash" style="color:red"/>
    </button>
    

}

@code {

    [Parameter]
    public int Id { get; set; }
    public int Price { get; set; }
    public String UserWinning { get; set; }

    private Product Product = new Product();

    protected override async Task OnInitializedAsync()
    {
        Price = 0;
        Console.WriteLine("Retrieving product with id " + Id);
        Product = await ProductManager.GetProduct(Id);
        
        
        // UserWinning = await BidManager.GetBidWinner(Id);
        // if (UserWinning == null)
        // {
        //     UserWinning = "None";
        // }
        
    }

    
    // Sends new price for the product, if the repsonse is true, the bid was accepted
    public async void BidButtonCliked()
    {
        if (Price > Product.Price)
        {
            int userId = ((CustomAuthenticationStateProvider) AuthenticationStateProvider).GetUserId();
            var response = await BidManager.Bid(Product.Id, userId, Price);
            if (response)
            {
                //The price is not assigned to the product as the time may change
                Product = await ProductManager.GetProduct(Id);
            }
            
        }
    }
}